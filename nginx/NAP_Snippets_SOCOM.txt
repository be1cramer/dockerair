 NGINX App Protect Training Class SNIPPETS lab file:

Lab 1.0 Getting Started
Exercise 1
Step 2
ssh student<#>@<FQDN>

Step 3
yes

Step 4
apt list --installed | grep nginx

Step 5
nginx -v

Step 6
ps aux | grep nginx

Step 7a
curl http://localhost

Step 7b
curl http://localhost?a=%3Cscript%3E

Step 7c
curl -H "1.2.3.4" http://localhost

Step 7d
curl http://localhost/%09

Step 7e
curl http://localhost/index.bak

Step 8
sudo vim /etc/nginx/nginx.conf

Step 8b
load_module modules/ngx_http_app_protect_module.so;

Step 9 Reload NGINX
sudo nginx -s reload

Step 10
curl http://localhost

Step 11
curl http://localhost?a=%3Cscript%3E

Step 12
http://<FQDN>
http://<FQDN>/<script>



Lab 1.0 Exercise 2
Step 1
sudo grep curl /var/log/nginx/access.log
sudo grep juice /var/log/nginx/access.log

Step 2 - enable App Protect
sudo vim /etc/nginx/nginx.conf
a
    app_protect_enable on;

Step 3
sudo nginx -s reload

Step 4
sudo grep APP_PROTECT /var/log/nginx/error.log

Step 5a
curl http://localhost?a=%3Cscript%3E

Step 5b
http://FQDN/<script>

Step 6a
curl -H "1.2.3.4" http://localhost

Step 6b
curl http://localhost/%09

Step 6c
curl http://localhost/index.bak

Step 7
cat /opt/app_protect/config/config_set.json

Step 8
cat /etc/nginx/NginxDefaultPolicy.json


Lab 1.0 Exercise 3
Step 1
sudo vim /etc/nginx/nginx.conf

    app_protect_security_log_enable on;
    app_protect_security_log "/etc/app_protect/conf/log_default.json" /var/log/app_protect/class_security.log;

Step 2
sudo nginx -s reload

Step 3
tail -f /var/log/app_protect/class_security.log

Optional:
tail -f /var/log/app_protect/class_security.log | grep --text -w 127.0.0.1

Step 4
curl http://localhost?a=%3Cscript%3E

Step 5
http://FQDN/<script>

Step 7
http://<FQDN>/index.html

Step 8
curl http://localhost/index.html



Lab 1.0 Exercise 4
Step 1a
sudo mkdir /etc/nginx/nap.d

Step 1b
sudo cp /etc/app_protect/conf/log_default.json /etc/nginx/nap.d/config-illegal-requests.json

Step 2a
sudo vim /etc/nginx/nap.d/config-illegal-requests.json
user-defined

Step 2b
"format_string": "Request ID: %support_id%, Reason: %outcome_reason%, Outcome: %outcome%, Attack Type: %attack_type%, Request Status %request_status%, %method% %uri%, Received on: %date_time% from IP: %ip_client% had the following violations: %violations%, Policy is: %policy_name%",

Step 3a
sudo vim /etc/nginx/nginx.conf

Step 3b
    app_protect_security_log "/etc/nginx/nap.d/config-illegal-requests.json" /var/log/app_protect/class_illegal_security.log;

Step 3d
sudo nginx -s reload

Step 4
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 5
curl http://localhost

Step 6
curl http://localhost?a=%3Cscript%3E



Lab 1.0 Exercise 5

Step 1
sudo vim /etc/nginx/conf.d/default.conf

log_format  custom  'NAP support ID: $app_protect_support_id - NAP outcome: $app_protect_outcome - NAP reason: $app_protect_outcome_reason - NAP policy name: $app_protect_policy_name - NAP version: $app_protect_version NGINX request: $request NGINX status: $status';

Step 2  
custom

Step 3
sudo nginx -s reload

Step 4a

curl http://localhost/NGINX_CLASS_TEST.bak

Step 4b
sudo grep NGINX_CLASS_TEST.bak /var/log/nginx/access.log

Step 5a
curl http://localhost?a=%3Cscript%E

Step 5b
sudo grep REJECTED /var/log/nginx/access.log




Lab 2.0 Exercise 1

Step 1 
cat /etc/nginx/NginxDefaultPolicy.json

Step 2a
sudo vim /etc/nginx/nap.d/policy-transparent.json

{
 "policy": {
    "name": "policy-transparent",
    "template": { "name":  "POLICY_TEMPLATE_NGINX_BASE" },
    "applicationLanguage": "utf-8",
    "enforcementMode": "transparent",
    "bot-defense" : {
        "settings": {
            "isEnabled": false
        }
    }    
 }
}

Step 2c
sudo vim /etc/nginx/nginx.conf

    app_protect_policy_file "/etc/nginx/nap.d/policy-transparent.json";

Step 2d
sudo nginx -s reload

Step 3a - Terminal 2:
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 3b - Terminal 1:
curl http://localhost?a=%3Cscript%3E


Step 4 OPTIONAL 
https://docs.nginx.com/nginx-app-protect/configuration




LAB 2.0 Exercise 2 VIOL_HTTP_PROTOCOL

Step 1a
sudo vim /etc/nginx/nap.d/policy-viol-http.json

{
    "policy": {
        "name": "policy-viol_http_protocol",
        "template": { "name": "POLICY_TEMPLATE_NGINX_BASE" },
        "applicationLanguage": "utf-8",
        "enforcementMode": "blocking",
        "blocking-settings": {
            "violations": [
                {
                    "name": "VIOL_HTTP_PROTOCOL",
                    "alarm": true,
                    "block": true
                }
            ]
        }
    }
}


Step 1c
sudo vim /etc/nginx/nginx.conf

    app_protect_policy_file "/etc/nginx/nap.d/policy-viol-http.json";

Step 1d
#

Step 1e
sudo nginx -s reload

Step 1f
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 2a
curl -H "Host: 1.2.3.4" http://localhost

Step 2b
curl -H "Content-Length: -26" http://localhost

Step 2c
sudo grep "status: 400" /var/log/nginx/access.log

Step 2d - Terminal 2
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 3a
sudo vim /etc/nginx/nap.d/policy-viol-http.json

false

Step 3b
sudo nginx -s reload

Step 4
curl -H "Host: 1.2.3.4" http://localhost

Step 5
sudo tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1




LAB 2.0 Exercise 3 - Violation Evasions
Step 2a

sudo vim /etc/nginx/nap.d/policy-viol-evasion.json

{
    "policy": {
     "name": "policy-viol_evasion",
    "template": { "name": "POLICY_TEMPLATE_NGINX_BASE" },
     "applicationLanguage": "utf-8",
     "enforcementMode": "blocking",
     "blocking-settings": {
         "violations": [
         {
             "name": "VIOL_EVASION",
             "alarm": true,
             "block": true
         }
         ]
      }
    }
}

Step 3
sudo vim /etc/nginx/nginx.conf

    app_protect_policy_file "/etc/nginx/nap.d/policy-viol-evasion.json";

Step 3b
#

Step 3c
sudo nginx -s reload 

Step 4
curl http://localhost/%09

Step 5a
sudo vim /etc/nginx/nap.d/policy-viol-evasion.json

Step 5b
        ,
            "evasions": [
            {
               "description": "Apache whitespace",
               "enabled": false
           }
           ]

Step 5c
sudo nginx -s reload

Step 5d
curl http://localhost/%09



Lab 2.0 Exercise 4 VIOL Filetype Policy
Step 1a
sudo vim /etc/nginx/nap.d/policy-viol-filetype.json

Step 1b
{
    "policy": 
    {
        "name": "policy-viol_filetype",
        "template": { "name": "POLICY_TEMPLATE_NGINX_BASE" },
        "applicationLanguage": "utf-8",
        "enforcementMode": "blocking",
        "blocking-settings": 
        {
            "violations":[
                {
                    "name": "VIOL_FILETYPE",
                    "alarm": true,
                    "block": true
                }
            ]
        }
    }
}

Step 2a
sudo vim /etc/nginx/nginx.conf

Step 2b
    app_protect_policy_file "/etc/nginx/nap.d/policy-viol-filetype.json";

Step 2c
#

Step 2d
sudo nginx -s reload

Step 3 - Terminal 2
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 4
curl http://localhost/index.php
curl http://localhost/test.exe

Step 6a
sudo rm /etc/nginx/nap.d/policy-viol-filetype.json

Step 6b
sudo vim /etc/nginx/nap.d/policy-viol-filetype.json

{
    "policy":
    {
        "name": "policy-viol_filetype",
        "template": { "name": "POLICY_TEMPLATE_NGINX_BASE" },
        "applicationLanguage": "utf-8",
        "enforcementMode": "blocking",
        "blocking-settings":
        {
            "violations":[
                {
                    "name": "VIOL_FILETYPE",
                    "alarm": true,
                    "block": true
                }
            ]
        },
        "filetypes": [
            {
                "name": "html",
                "type": "explicit",
                "allowed": true
            }
        ]
    },
        "modifications": [
            {
                "entityChanges": {"type": "wildcard"},
                "entity": {"name": "*"},
                "entityType": "filetype",
                "action": "delete"
            }
        ]
}

Step 6c
sudo nginx -s reload

Step 7
curl http://localhost/goodlinks.html 

Step 8
curl http://localhost/NGINX_CLASS_TEST.php
curl http://localhost/NGINX_CLASS_TEST.jpg



Lab 2.0 Exercise 5 Strict Policy
Step 1
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 2a
sudo vim /etc/nginx/nginx.conf

Step 2b
# 

Step 2c
    app_protect_policy_file "/etc/nginx/NginxStrictPolicy.json";

Step 3
sudo nginx -s reload

Step 4a 
curl http://localhost/%09

Step 4b
curl http://localhost/index.bat

Step 4c
curl http://localhost/?a=%3Cscript%3E





Lab 2.1 ENABLE MULTIPLE POLICIES

Lab 2.1 Exercise 1
Step 1
sudo vim /etc/nginx/nginx.conf
#
    app_protect_policy_file "/etc/nginx/NginxDefaultPolicy.json";

Step 3
sudo vim /etc/nginx/conf.d/default.conf

    location /basic {
        app_protect_policy_file "/etc/nginx/nap.d/policy-viol-filetype.json";
        proxy_pass http://juice_server;
    }

Step 4
sudo nginx -s reload

Step 5
curl http://localhost/NGINX_CLASS_TEST.php

Step 6
curl http://localhost/basic/NGINX_CLASS_TEST.php



Lab 2.1 Exercise 2
Step 1

sudo vim /etc/app_protect/conf/my-filetypes.txt

Step 2  
[
    {
        "name": "*",
        "type": "wildcard",
        "allowed": true,
        "checkPostDataLength": false,
        "postDataLength": 4096,
        "checkRequestLength": false,
        "requestLength": 8192,
        "checkUrlLength": true,
        "urlLength": 2048,
        "checkQueryStringLength": true,
        "queryStringLength": 2048,
        "responseCheck": false
    },
    {
        "name": "pat",
        "allowed": false
    },
    {
        "name": "mat",
        "allowed": false
    }
]

Step 3
sudo vim /etc/nginx/nap.d/local-policy.json

{
    "name": "my_local_resources_file_types",
    "template": {
        "name": "POLICY_TEMPLATE_NGINX_BASE"
    },
    "applicationLanguage": "utf-8",
    "enforcementMode": "blocking",
    "blocking-settings": {
        "violations": [
            {
                "name": "VIOL_FILETYPE",
                "alarm": true,
                "block": true
            }
        ]
    },
    "filetypeReference": {
        "link": "file:///my-filetypes.txt"
    }
}

Step 5
sudo vim /etc/nginx/nginx.conf

    app_protect_policy_file "/etc/nginx/nap.d/local-policy.json";

Step 6
sudo nginx -s reload

Step 7
tail -f /var/log/app_protect/class_illegal_security.log | grep --text -w 127.0.0.1

Step 8a
curl http://localhost/index.html
curl http://localhost/file.php

Step 8b
curl ifconfig.me
curl --resolve <FQDN>:80:<public_ip_address> 'http://<FQDN>/index.html'
curl --resolve <FQDN>:80:<public_ip_address> 'http://<FQDN>/file.php'

Step 9
curl http://localhost/index.pat
curl http://localhost/file.mat

Step 10
curl http://localhost/?a=%3Cscript%3E





Lab 3.0 Visualization

Step 1
cd /home/ubuntu/f5-waf-elk-dashboards

Step 2
cat docker-compose.yaml

Step 3
sudo docker-compose up -d

Step 4
sudo docker images

Step 5
sudo docker ps -a

Step 6
sudo vim /etc/nginx/nginx.conf
#
    app_protect_security_log "/etc/nginx/nap.d/config-illegal-requests.json" syslog:server=localhost:5144;

Step 7
cd /etc/nginx/nap.d
sudo vim config-illegal-requests.json
default

Step 8
sudo nginx -s reload

Step 9
~ubuntu/illegal_calls

OR
curl http://localhost/index.html
curl http://localhost?a=%3Cscript%3E
curl http://localhost/basic/index.php
curl http://localhost/file.exe
curl http://localhost/%09
curl -H "Content-Length: -26" http://localhost

Step 10
http://<FQDN>:5601




Lab 4.0 
Exercise 1 -Update Attack Signatures

Step 1
apt list --installed | grep app-protect

Step 2
printf "deb https://app-protect-security-updates.nginx.com/ubuntu/ `lsb_release -cs` nginx-plus\n" | sudo tee /etc/apt/sources.list.d/app-protect-security-updates.list

Step 3
cd /etc/nginx

sudo wget https://cs.nginx.com/static/keys/app-protect-security-updates.key && sudo apt-key add app-protect-security-updates.key

Step 4
cat /etc/nginx/app-protect-security-updates.key

Step 5
sudo wget -P /etc/apt/apt.conf.d https://cs.nginx.com/static/files/90app-protect-security-updates

Step 6
cat /etc/apt/apt.conf.d/90app-protect-security-updates

Step 7
sudo cp ~ubuntu/nginx-repo* /etc/ssl/nginx

Step 8
sudo apt-get update && sudo apt-get install app-protect-attack-signatures

Step 9
sudo nginx -s reload

Step 10
apt list --installed | grep app-protect

Step 11
sudo apt-cache policy app-protect-attack-signatures




Lab 4 Exercise  2 - Install Threat Campaigns
Step 1
sudo apt-get update && sudo apt-get install app-protect-threat-campaigns

Step 2
apt list --installed | grep app-protect

Step 3
sudo nginx -s reload

Step 4
sudo apt-cache policy app-protect-threat-campaigns

Lab 4 Exercise 3 Update NGINX App Protect (Optional)
Step 1a
printf "deb https://pkgs.nginx.com/app-protect/ubuntu `lsb_release -cs` nginx-plus\n" | sudo tee /etc/apt/sources.list.d/nginx-app-protect.list

Step 1b
apt list --installed | grep app-protect

Step 1c
apt list --installed | grep app-protect > /tmp/current.txt

apt list --installed | grep nginx > /tmp/current_nginx_plus.txt

Step 1d
sudo apt-get update && sudo apt-get install -y app-protect

Step 1e
apt list --installed | grep app-protect > /tmp/updated.txt

apt list --installed | grep nginx > /tmp/updated_nginx_plus.txt

Step 1f
cat /tmp/current.txt
cat /tmp/updated.txt

Step 1g
cat /tmp/current_nginx_plus.txt
cat /tmp/updated_nginx_plus.txt
nginx -v

Step 1h
sudo systemctl restart nginx



Lab 5.0 TROUBLESHOOTING

Lab 5.0 Exercise 1 - NGINX CONFIGURATION
Step 1
sudo vim /etc/nginx/nginx.conf
WRONG

Step 2
sudo nginx -s reload

Step 3
sudo tail /var/log/nginx/error.log

Step 4
sudo vim /etc/nginx/nginx.conf
sudo nginx -s reload



Lab 5.0 Exercise 2 - App Protect Policy Issues
Step 1
sudo vim /etc/nginx/nginx.conf

Step 2
# 
app_protect_policy_file "/etc/nginx/policy-viol-filetype.json";

Step 3
sudo vim /etc/nginx/nap.d/policy-viol-filetype.json

Step 4
sudo nginx -s reload
cat /etc/nginx/nap.d/policy-viol-filetype.json | jq .

Step 5
sudo tail /var/log/nginx/error.log

Step 6
sudo vim /etc/nginx/nap.d/policy-viol-filetype.json

Step 7
sudo nginx -s reload

Step 8
sudo vim /etc/nginx/nap.d/policy-viol-filetype.json
12

Step 9
sudo nginx -s reload

Step 10
sudo vim /etc/nginx/nap.d/policy-viol-filetype.json
true
sudo nginx -s reload



Lab 5.0 Exercise 3 - Gather support files
Step 1
cd
cat /opt/app_protect/VERSION > package_versions.txt

Step 2
apt list --installed | grep -E 'nginx-plus|app-protect' >> package_versions.txt

Step 3
cat package_versions.txt

Step 4
cat /etc/os-release > system_version.txt
uname -r >> system_version.txt
cat /proc/version >> system_version.txt

Step 5
cat system_version.txt

Step 6
vim logs.txt

package_versions.txt
system_version.txt
/var/log/app_protect/*
/var/log/nginx/*
/etc/nginx/nginx.conf
/etc/nginx/conf.d/*
/etc/nginx/nap.d/*

Step 7
sudo tar cvzf logs.tgz `cat logs.txt`
ls -ltr
tar tvzf logs.tgz
